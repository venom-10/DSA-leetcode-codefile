#include <bits/stdc++.h>
using namespace std;

void addedge(vector<int> ad[],int u, int v){
	ad[u].push_back(v);
	ad[v].push_back(u);
	return ;
}

void BFS(vector<int> adj[],int s,bool visited[],vector<int> &dis){
	queue<int> q;
	q.push(s);
	visited[s]=true;
	while(!q.empty()){
		int cu=q.front();
		q.pop();
		cout<<cu<<" ";
		for(auto i: adj[cu]){
			if(!visited[i]){
				dis[i]=dis[cu]+1;
				q.push(i);
				visited[i]=true;
			}
		}
	}
}
int main(){
	int v=4;
	vector<int> adj[v];
	addedge(adj,0,1); 
	addedge(adj,1,2); 
	addedge(adj,2,3); 
	addedge(adj,0,2); 
	addedge(adj,1,3);
	cout<<"List "<<endl;
	for(auto i: adj){
		for(auto j: i)
			cout<<j<<" ";
	cout<<endl;
	}
	bool visited[v]={0};
	vector<int> dis(v);
	dis[0]=0;
	
	cout<<"Bfs traversal"<<endl;
	for(int i=0;i<v;i++){
		if(visited[i]==0){
			
			BFS(adj, i,visited,dis);
		}
	}
	cout<<endl<<"end of traversal"<<endl;
	cout<<"distance between source to any vertices"<<endl;
	for(auto i: dis)
		cout<<i<<" ";
}
