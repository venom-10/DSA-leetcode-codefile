#include <bits/stdc++.h>
using namespace std;

void addedge(vector<int> ad[],int u, int v){
	ad[u].push_back(v);
	return ;
}

bool iscycle(vector<int> adj[],int s,  vector<int>& visited,vector<int>& visiSeq){
    visited[s]=1;
    visiSeq[s]=1;
    for(auto i: adj[s]){
        if(!visited[i]){
            if(iscycle(adj, i, visited, visiSeq))
                return true;
        }
        else if(visiSeq[i]==1)
            return true;
    }
    visiSeq[s]=0;
    return false;
}
bool isCyclic(int v, vector<int> adj[]) {
    vector<int> visited(v,0);
    vector<int> visiSeq(v,0);
    for(int i=0;i<v;i++){
        if(!visited[i]){
            if(iscycle(adj, i, visited, visiSeq))
                return true;
        }
    }
	return false;
    
}

int main(){
	int v=6;
	vector<int> adj[v];
	addedge(adj,0,1); 
	addedge(adj,2,1); 
	addedge(adj,2,3); 
	addedge(adj,3,4); 
	addedge(adj,4,5);
	addedge(adj,5,3);
	cout<<"List "<<endl;
	for(auto i: adj){
		for(auto j: i)
			cout<<j<<" ";
	cout<<endl;
	}

	if(isCyclic(v, adj))
		cout<<"Cycle Found";
	else
		cout<<"Cycle is not Found";


}
