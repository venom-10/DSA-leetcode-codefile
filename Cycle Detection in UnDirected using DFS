#include <bits/stdc++.h>
using namespace std;

void addedge(vector<int> ad[],int u, int v){
    ad[u].push_back(v);
    ad[v].push_back(u);
    return ;
}

bool iscycle(vector<int> adj[],int s, int pa,bool visited[]){

	visited[s]=1;
	for(int i: adj[s]){
		if(!visited[i]){
			visited[i]=1;
			if(iscycle(adj, i, s, visited)==true)
				return true;
		}
		else if(i!=pa)
			return true;

	}
	return false;
}

bool isCycle(int v, vector<int> adj[]) {
    bool visited[v]={0};
    for(int i=0;i<v;i++){
        if(!visited[i]){
            if(iscycle(adj,i,-1, visited))
                return true;
        }
    }
    return false;
    
}

int main(){
    int v=6;
    vector<int> adj[v];
    addedge(adj,0,1); 
    addedge(adj,1,2);
    addedge(adj,0,2);
    addedge(adj,2,4); 
    addedge(adj,4,5); 
    addedge(adj,1,3);
    addedge(adj,2,3);
    cout<<"List "<<endl;
    for(auto i: adj){
        for(auto j: i)
            cout<<j<<" ";
    cout<<endl;
    }
    if(isCycle(v,adj))
        cout<<"Cycle Found";
    else
        cout<<"Cycle is not Found";
}

